knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggplot2)
install.packages("stargazer")
library(stargazer)
#install.packages("sandwich")
#install.packages("haven")
library(sandwich)
library(haven)
#setwd("emlieu_breakfast_price")
#setwd("/Users/eclieu/Desktop/emlieu_breakfast_price")
#setwd("/Users/eclieu/Desktop/BIS15W2023_elieu/")
#setwd("/Users/eclieu/Desktop/emlieu_breakfast_price/")
#getwd()
avo <- read_csv("avocado-updated-2020 2.csv")
avo
org_avo <- avo %>%
filter (type == "organic") %>%
arrange(desc(average_price))
org_avo
pleb_avo <- avo %>%
filter(type == "conventional") %>%
arrange(desc(average_price))
pleb_avo
avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
pleb_avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
pleb_avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
org_avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
org_avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
avo$year <- as.factor(avo$year)
avo
sf_data <- avo %>%
filter(geography == "San Francisco")
sf_data
sf_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
reg1 <- lm(average_price ~ date, data=sf_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
lm(average_price ~ date, data= sf_data)
sf_data$average_price <- as.character(sf_data$average_price)
sf_data
sf_data$date <- as.factor(sf_data$date)
sf_data
?lm
chic_data <- avo %>%
filter(geography == "Chicago")
install.packages("stargazer")
chic_data <- avo %>%
filter(geography == "Chicago")
chic_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
reg1 <- lm(average_price ~ date, data=chic_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
cinday_data <- avo %>%
filter(geography == "Cincinnati/Dayton")
cinday_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
reg1 <- lm(average_price ~ date, data=cinday_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=chic_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=chic_data)
stargazer(sfreg,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
chicreg <- lm(average_price ~ date, data=chic_data)
stargazer(chicreg,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=sf_data)
stargazer(sfreg,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=sf_data)
stargazer(sfreg,
se=list(cse(sfreg)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
chicreg <- lm(average_price ~ date, data=chic_data)
stargazer(chicreg,
se=list(cse(chicreg)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=sf_data)
stargazer(sfreg,
se=list(cse(sfreg)),
title="Regression Results", type="text",
df=FALSE, digits=3)
sf_data %>%
summary(lm(average_price ~ date))$coefficients
sf_data %>%
res=lm(average_price ~ date)
sf_data <- avo %>%
filter(geography == "San Francisco")
sf_data
sf_data %>%
res=lm(average_price ~ date)
avo %>%
filter(geography == "San Francisco") %>%
ggplot(aes(x= year, y= average_price, fill=year))+
geom_boxplot()
install.packages("devtools")
library(devtools)
map<-get_map(location='united states', zoom=4, maptype = "terrain",
source='google',color='color')
install.packages("ggmaps")
library(ggmaps)
avo %>%
filter(greography == "Sacramento") %>%
arrange(desc(average_price))
avo %>%
filter(geography == "Sacramento") %>%
arrange(desc(average_price))
sac_graph <- avo %>%
filter(geography == "Sacramento") %>%
arrange(desc(average_price)) %>%
ggplot(aes(x=date, y=average_price))+
geom_point()
sac_graph <- avo %>%
filter(geography == "Sacramento") %>%
arrange(desc(average_price)) %>%
ggplot(aes(x=date, y=average_price))+
geom_point()
sac_graph
library(ggmap)
us_map <- get_map(location = "united states", zoom = 4, maptype = "terrain")
ggmap::register_google(key = "your_api_key_here")
us_map <- get_map(location = "united states", zoom = 4, maptype = "terrain")
avo %>%
tabyl(geography)
avo %>%
filter(year == 2016) %>%
tabyl(geography)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggplot2)
install.packages("stargazer")
library(stargazer)
#install.packages("sandwich")
#install.packages("haven")
library(sandwich)
library(haven)
#setwd("emlieu_breakfast_price")
#setwd("/Users/eclieu/Desktop/emlieu_breakfast_price")
#setwd("/Users/eclieu/Desktop/BIS15W2023_elieu/")
#setwd("/Users/eclieu/Desktop/emlieu_breakfast_price/")
#getwd()
avo <- read_csv("avocado-updated-2020 2.csv")
avo
org_avo <- avo %>%
filter (type == "organic") %>%
arrange(desc(average_price))
org_avo
pleb_avo <- avo %>%
filter(type == "conventional") %>%
arrange(desc(average_price))
pleb_avo
avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
pleb_avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
pleb_avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
org_avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
org_avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
avo$year <- as.factor(avo$year)
avo
sf_data <- avo %>%
filter(geography == "San Francisco")
sf_data
sf_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
sf_data %>%
res=lm(average_price ~ date)
avo %>%
filter(geography == "Cincinnati/Dayton") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
avo %>%
filter(geography == "Phoenix/Tucson") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method=lm, se=F)
avo %>%
filter(geography == "Sacramento") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method=lm, se=F)
sf_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
stat_smooth(method= lm, se= F)
fit1 <- lm(date ~ average_price, data = sf_data)
summary(fit1)
fit1 <- lm(`date` ~ average_price, data = sf_data)
summary(fit1)
fit1 <- lm(`date` ~ average_price, `data` = sf_data)
summary(fit1)
fit1 <- lm(`date` ~ average_price, `data` = sf_data)
summary(fit1)
ggplotRegression <- function (fit) {
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
fit <- lm(date ~ average_price, data = sf_data)
ggplotRegression(fit1)
fit <- lm(date ~ average_price, data = sf_data)
ggplotRegression(fit)
library(ggplot)
library(ggplot2)
fit <- lm(date ~ average_price, data = sf_data)
ggplotRegression(fit)
fit <- lm(`date` ~ average_price, `data` = sf_data)
ggplotRegression(fit)
facetRegression <- function(dat, xvar, yvar, group) {
fml <- paste(yvar, "~", xvar)
group <- rlang::sym(group)
wrap_fml <- rlang::new_formula(rhs = group, lhs = NULL)
dot <- rlang::quo(-!!group)
sf_data %>%
nest(!!dot) %>%
mutate(model = map(data, ~ lm(fml, data = .x)),
adj.r.squared = map_dbl(model, ~ signif(summary(.x)$adj.r.squared, 5)),
intercept = map_dbl(model, ~ signif(.x$coef[[1]],5)),
slope = map_dbl(model, ~ signif(.x$coef[[2]], 5)),
pvalue = map_dbl(model, ~ signif(summary(.x)$coef[2,4], 5))
) %>%
select(-data, -model) %>%
left_join(dat) %>%
# actual plot below
ggplot(aes_string(date, average_price)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
facet_wrap(wrap_fml) +
geom_text(aes(3, 40, label = paste("Adj R2 = ", adj.r.squared, "\n",
"Intercept =",intercept, "\n",
"Slope =", slope, "\n",
"P =", pvalue)))
}
facetRegression(mpg, "displ", "hwy", "class")
ggplotRegression <- function(fit){
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(lm(`date` ~ average_price, data = sf_data))
sf_data_the_date <- sf_data %>% rename(the_date, date)
sf_data_the_date <- sf_data %>% mutate(the_date = date)
names(sf_data_the_date)
ggplotRegression <- function(fit){
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(lm(the_date ~ average_price, data = sf_data_the_date))
View(sf_data)
sf_data %>%
mutate(time_dif = as.double(difftime(lubridate::ymd("2015-01-04"),
date,
units = "days"))
sf_data %>%
mutate(time_dif = as.double(difftime(lubridate::ymd("2015-01-04"),date)))
sf_data %>%
mutate(time_dif = as.double(difftime(lubridate::ymd("2015-01-04"),date), units= "days"))
sf_data %>%
mutate(time_dif = as.double date,(difftime(lubridate::ymd("2015-01-04")), units= "days"))
sf_data %>%
mutate(time_dif = as.double(difftime(date, lubridate::ymd("2015-01-04")), units= "days"))
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(lm(time_dif ~ average_price, data = sf_data))
sf_data <- sf_data %>%
mutate(time_dif = as.double(difftime(date, lubridate::ymd("2015-01-04")), units= "days"))
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(lm(time_dif ~ average_price, data = sf_data))
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(lm(average_price ~ time_dif, data = sf_data))
options(scipen= 999)
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(lm(average_price ~ time_dif, data = sf_data))
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste(
#"Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5)
#" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5))
}
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5)))
}
ggplotRegression(lm(average_price ~ time_dif, data = sf_data))
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
#  stat_smooth(method = "lm", col = "red") +
labs(title = paste("Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5)))
}
ggplotRegression(lm(average_price ~ time_dif, data = sf_data))
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
#  geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5)))
}
ggplotRegression(lm(average_price ~ time_dif, data = sf_data))
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5)))+
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
}
ggplotRegression(lm(average_price ~ time_dif, data = sf_data))
sf_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)+
labs(title = paste("Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5)))
ggplotRegression <- function(fit){
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5)))
}
ggplotRegression(lm(average_price ~ time_dif, data = sf_data))
sf_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)+
labs(title = paste("Intercept =1.7728",
" Slope = -0.000011943")
sf_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)+
labs(title = paste("Intercept =1.7728",
"Slope = -0.000011943"))
sf_data <- sf_data %>%
mutate(time_dif = as.double(difftime(date, lubridate::ymd("2015-01-04")), units= "days"))
sf_data <- sf_data %>%
mutate(time_dif = as.double(difftime(date, lubridate::ymd("2015-01-04")), units= "days"))
sf_data
