select("year", "geography", "average_price") %>%
arrange(average_price)
pleb_avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
pleb_avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
org_avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
org_avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
avo$year <- as.factor(avo$year)
avo
avo %>%
filter(geography == "San Francisco") %>%
group_by(year) %>%
mutate(average_price_mean = mean(average_price, na.rm=T)) %>%
ggplot(aes(x= year, y= average_price_mean, fill=year))+
geom_point()+
geom_smooth(method=lm, se=T)
p <- avo %>%
filter(geography == "San Francisco") %>%
group_by(year) %>%
mutate(average_price_mean = as.numeric(mean(average_price, na.rm=T))) %>%
ggplot(aes(x= year, y= average_price_mean, fill=year))+
geom_point()+
geom_smooth(method=lm, se=F)
p
avo %>%
filter(geography == "San Francisco") %>%
ggplot(aes(x= year, y= average_price, fill=year))+
geom_boxplot()
avo %>%
filter(geography == "Chicago") %>%
ggplot(aes(x= year, y= average_price, fill=year))+
geom_boxplot()
avo %>%
filter(geography == "Cincinnati/Dayton") %>%
ggplot(aes(x= year, y= average_price, fill=year))+
geom_boxplot()
avo %>%
filter(geography == "Phoenix/Tucson") %>%
ggplot(aes(x= year, y= average_price, fill=year))+
geom_boxplot()
avo %>%
filter(geography == "Sacramento") %>%
ggplot(aes(x= year, y= average_price, fill=year))+
geom_boxplot()
View(avo)
avo %>%
filter(geography == "San Francisco") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()
avo %>%
filter(geography == "San Francisco") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
avo %>%
filter(geography == "Chicago") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
avo %>%
filter(geography == "Cincinnati/Dayton") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
avo %>%
filter(geography == "Phoenix/Tucson") %>%
group_by(year) %>%
mutate(average_price_mean = mean(average_price, na.rm=T)) %>%
ggplot(aes(x= year, y= average_price_mean, fill=year))+
geom_point()+
geom_smooth(method=lm, se=T)
avo %>%
filter(geography == "Phoenix/Tucson") %>%
ggplot(aes(x= date(), y= average_price_mean))+
geom_point()+
geom_smooth(method=lm, se=T)
avo %>%
filter(geography == "Phoenix/Tucson") %>%
ggplot(aes(x= date(), y= average_price))+
geom_point()+
geom_smooth(method=lm, se=T)
avo %>%
filter(geography == "Phoenix/Tucson") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method=lm, se=T)
avo %>%
filter(geography == "Phoenix/Tucson") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method=lm, se=F)
avo %>%
filter(geography == "Sacramento") %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method=lm, se=F)
sf_data <- avo %>%
filter(geography == "San Francisco")
sf_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
sf_data %>%
group_by(date) %>%
do({
mod = lm(disp ~ mpg, data = .)
data.frame(Intercept = coef(mod)[1],
Slope = coef(mod)[2])
})
sf_data %>%
lm(average_price ~ date)
sf_data %>%
average_price <- c(
select(average_price))
sf_data %>%
average_price <- c(
select("average_price"))
sf_data %>%
average_price <- c(
select("average_price"))
sf_data$date <- as.factor(sf_data$date)
sf_data
sf_data %>%
average_price <- c(
select("average_price"))
sf_data$average_price <- as.factor(sf_data$average_price)
sf_data
sf_data %>%
average_price <- c(
select("average_price"))
sf_data %>%
average_price <- c(
select("average_price"))
sf_data$date <- as.factor(sf_data$date)
sf_data
sf_data %>%
average_price <- c(
select("average_price"))
sf_data %>%
average_price <- c(
select("average_price"))
sf_data$average_price <- as.character(sf_data$average_price)
sf_data
sf_data %>%
average_price <- c(
select("average_price"))
sf_data %>%
average_price <- c(
select("average_price"))
lm()?
lm?
?lm
sf_data %>%
summary(lm(date ~ average_price, data= sf_data))
sf_data %>%
summary(lm(average_price ~ date, data= sf_data))
summary(lm(average_price ~ date, data= sf_data))
sf_maxmin <-  sf_data %>%
select("year", "date", "average_price") %>%
filter(year == 2015) %>%
arrange(desc(average_price)) %>%
slice_max(average_price, n=3)
sf_max <-  sf_data %>%
select("year", "date", "average_price") %>%
filter(year == 2015) %>%
arrange(desc(average_price)) %>%
slice_max(average_price, n=3)
sf_max
sf_min <-  sf_data %>%
select("year", "date", "average_price") %>%
filter(year == 2015) %>%
arrange(average_price) %>%
slice_max(average_price, n=3)
sf_min
sf_min <-  sf_data %>%
select("year", "date", "average_price") %>%
filter(year == 2015) %>%
arrange(desc(average_price)) %>%
slice_max(average_price, n=3)
sf_min
sf_min <-  sf_data %>%
select("year", "date", "average_price") %>%
filter(year == 2015) %>%
arrange(desc(average_price)) %>%
slice_min(average_price, n=3)
sf_min
sf_max2015 <-  sf_data %>%
select("year", "date", "average_price") %>%
filter(year == 2015) %>%
arrange(desc(average_price)) %>%
slice_max(average_price, n=3)
sf_max2015
sf_min2015 <-  sf_data %>%
select("year", "date", "average_price") %>%
filter(year == 2015) %>%
arrange(desc(average_price)) %>%
slice_min(average_price, n=3)
sf_min2015
sf_max2020 <-  sf_data %>%
select("year", "date", "average_price") %>%
filter(year == 2020) %>%
arrange(desc(average_price)) %>%
slice_max(average_price, n=3)
sf_max2020
sf_min2020 <-  sf_data %>%
select("year", "date", "average_price") %>%
filter(year == 2020) %>%
arrange(desc(average_price)) %>%
slice_min(average_price, n=3)
sf_min2020
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
table_A <- read_csv("data/table_A.csv")
table_B <- read_csv("data/table_B.csv")
table_A
table_B
#join_type(firstTable, secondTable, by=columnTojoinOn)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF #joins what is in perfectly in common (customer 1 and 2)
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF #adds columns from table B to table A but no customers
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF #adds columns from table A to table B but none of the customers
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF #joins everything, even missing data/ data a table doesn't have
sf_2020 <- full_join(sf_max2020, sf_min2020, by "year")
sf_2020 <- full_join(sf_max2020, sf_min2020, by= "year")
sf_2020
sf_2020 <- full_join(sf_max2020, sf_min2020, by= "year", "date", "average_price")
sf_2020 <- full_join(sf_max2020, sf_min2020, by= "year")
sf_2020
sf_2020 <- left_join(sf_max2020, sf_min2020, by= "year")
sf_2020
lm(average_price ~ date, data= sf_data)
sf_data <- avo %>%
filter(geography == "San Francisco")
sf_data
install.packages("stargazer")
library(stargazer)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
reg1 <- lm(average_price ~ date, data=sf_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
library(stargazer)
library(stargazer)
install.packages("sandwich")
install.packages("haven")
install.packages("haven")
knitr::opts_chunk$set(echo = TRUE)
library(sandwich)
library(haven)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
reg1 <- lm(average_price ~ date, data=sf_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
library(stargazer)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
reg1 <- lm(average_price ~ date, data=sf_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
chic_data <- avo %>%
filter(geography == "Chicago")
avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggplot2)
install.packages("stargazer")
library(stargazer)
#install.packages("sandwich")
#install.packages("haven")
library(sandwich)
library(haven)
#setwd("emlieu_breakfast_price")
#setwd("/Users/eclieu/Desktop/emlieu_breakfast_price")
#setwd("/Users/eclieu/Desktop/BIS15W2023_elieu/")
#setwd("/Users/eclieu/Desktop/emlieu_breakfast_price/")
#getwd()
avo <- read_csv("avocado-updated-2020 2.csv")
avo
org_avo <- avo %>%
filter (type == "organic") %>%
arrange(desc(average_price))
org_avo
pleb_avo <- avo %>%
filter(type == "conventional") %>%
arrange(desc(average_price))
pleb_avo
avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
pleb_avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
pleb_avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
org_avo %>%
select("year", "geography", "average_price") %>%
arrange(desc(average_price))
org_avo %>%
select("year", "geography", "average_price") %>%
arrange(average_price)
avo$year <- as.factor(avo$year)
avo
sf_data <- avo %>%
filter(geography == "San Francisco")
sf_data
sf_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
reg1 <- lm(average_price ~ date, data=sf_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
lm(average_price ~ date, data= sf_data)
sf_data$average_price <- as.character(sf_data$average_price)
sf_data
sf_data$date <- as.factor(sf_data$date)
sf_data
?lm
chic_data <- avo %>%
filter(geography == "Chicago")
install.packages("stargazer")
chic_data <- avo %>%
filter(geography == "Chicago")
chic_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
reg1 <- lm(average_price ~ date, data=chic_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
cinday_data <- avo %>%
filter(geography == "Cincinnati/Dayton")
cinday_data %>%
ggplot(aes(x= date, y= average_price))+
geom_point()+
geom_smooth(method= lm, se= F)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
reg1 <- lm(average_price ~ date, data=cinday_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=chic_data)
stargazer(reg1,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=chic_data)
stargazer(sfreg,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
chicreg <- lm(average_price ~ date, data=chic_data)
stargazer(chicreg,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=sf_data)
stargazer(sfreg,
se=list(cse(reg1)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=sf_data)
stargazer(sfreg,
se=list(cse(sfreg)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
chicreg <- lm(average_price ~ date, data=chic_data)
stargazer(chicreg,
se=list(cse(chicreg)),
title="Regression Results", type="text",
df=FALSE, digits=3)
options(scipen = 9)
cse = function(reg) {
rob = sqrt(diag(vcovHC(reg, type = "HC1")))
return(rob)
}
sfreg <- lm(average_price ~ date, data=sf_data)
stargazer(sfreg,
se=list(cse(sfreg)),
title="Regression Results", type="text",
df=FALSE, digits=3)
sf_data %>%
summary(lm(average_price ~ date))$coefficients
sf_data %>%
res=lm(average_price ~ date)
sf_data <- avo %>%
filter(geography == "San Francisco")
sf_data
sf_data %>%
res=lm(average_price ~ date)
avo %>%
filter(geography == "San Francisco") %>%
ggplot(aes(x= year, y= average_price, fill=year))+
geom_boxplot()
install.packages("devtools")
library(devtools)
map<-get_map(location='united states', zoom=4, maptype = "terrain",
source='google',color='color')
install.packages("ggmaps")
library(ggmaps)
avo %>%
filter(greography == "Sacramento") %>%
arrange(desc(average_price))
avo %>%
filter(geography == "Sacramento") %>%
arrange(desc(average_price))
sac_graph <- avo %>%
filter(geography == "Sacramento") %>%
arrange(desc(average_price)) %>%
ggplot(aes(x=date, y=average_price))+
geom_point()
sac_graph <- avo %>%
filter(geography == "Sacramento") %>%
arrange(desc(average_price)) %>%
ggplot(aes(x=date, y=average_price))+
geom_point()
sac_graph
library(ggmap)
us_map <- get_map(location = "united states", zoom = 4, maptype = "terrain")
ggmap::register_google(key = "your_api_key_here")
us_map <- get_map(location = "united states", zoom = 4, maptype = "terrain")
avo %>%
tabyl(geography)
avo %>%
filter(year == 2016) %>%
tabyl(geography)
